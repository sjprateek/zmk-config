/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        cmdShift3: cmdShift3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_3))>;
            label = "CMDSHIFT3";
        };

        cmdShift4: cmdShift4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_4))>;
            label = "CMDSHIFT4";
        };

        cmdShift5: cmdShift5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N5))>;
            label = "CMDSHIFT5";
        };

        ctrlCloseSquareBracket: ctrlCloseSquareBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT_BRACKET)>;
            label = "CTRLCLOSESQUAREBRACKET";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC           &kp N1              &kp N2          &kp N3            &kp N4            &kp N5                                             &kp N6        &kp N7             &kp N8           &kp N9           &kp N0                       &kp BACKSPACE
&kp TAB           &kp Q               &lt 6 W         &kp E             &kp R             &lt 5 T                                            &kp Y         &kp U              &kp I            &kp O            &kp P                        &kp BACKSLASH
&mt LCTRL ESCAPE  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D    &mt LEFT_SHIFT F  &lt 4 G                                            &kp H         &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMICOLON  &kp ENTER
&kp LSHFT         &lt 8 Z             &kp X           &kp C             &lt 7 V           &kp B             &lt 1 MINUS    &lt 2 UNDERSCORE  &kp N         &kp M              &kp COMMA        &kp DOT          &kp FSLH                     &mt RIGHT_SHIFT SQT
                                                      &kp LEFT_CONTROL  &kp LEFT_ALT      &kp LEFT_COMMAND  &lt 3 SPACE    &lt 3 SPACE       &kp UP_ARROW  &kp LEFT           &kp RIGHT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans     &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans          &trans          &trans        &trans     &trans    &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6          &kp N7          &kp N8        &kp N9     &kp N0    &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans    &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS     &kp MINUS       &kp EQUAL     &kp LBKT   &kp RBKT  &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans          &trans          &trans
            >;
        };

        special {
            bindings = <
&kp GRAVE       &kp TILDE  &trans        &cmdShift3    &cmdShift4     &cmdShift5                                                     &trans    &trans        &kp PLUS      &kp UNDERSCORE  &kp MINUS             &kp EQUAL
&kp LG(TAB)     &trans     &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)  &ctrlCloseSquareBracket                                        &trans    &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)   &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&kp CAPSLOCK    &trans     &kp LEFT      &kp DOWN      &kp RIGHT      &trans                                                         &trans    &kp LEFT      &kp DOWN      &kp RIGHT       &kp LEFT_BRACE        &kp RIGHT_BRACE
&kp LEFT_SHIFT  &trans     &trans        &trans        &trans         &trans                   &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &trans    &trans        &trans        &trans          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
                                         &trans        &trans         &trans                   &trans               &trans           &kp DOWN  &kp MINUS     &kp EQUAL
            >;
        };

        combo_nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans    &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans    &trans         &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans
            >;
        };

        combo_tmux_nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans        &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &kp LS(UP)    &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LC(A)     &trans        &kp LC(E)      &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans
            >;
        };

        combo_window_mgmt {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans                &trans            &trans                 &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LC(LA(LG(LEFT)))  &kp LC(LA(UP))    &kp LC(LA(LG(RIGHT)))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LC(LA(LEFT))      &kp LC(LA(DOWN))  &kp LC(LA(RIGHT))      &trans  &kp LC(LA(ENTER))
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans                &trans            &trans                 &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans                &trans
            >;
        };

        combo_volume {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans             &trans             &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans             &kp C_VOLUME_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp K_MUTE         &kp K_MUTE         &trans           &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans
            >;
        };

        combo_undo_redo {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans     &trans  &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans     &trans  &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LG(Z)  &trans  &kp LG(LS(Z))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans  &trans         &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans
            >;
        };
    };
};
